require 'nn'

print('Module 1 initiated:')
module = nn.Sequential()
module:add(nn.Convert('bchw', 'bf'))
module:add(nn.Linear(1*28*28, 20))
module:add(nn.Tanh())
module:add(nn.Linear(20, 10))
module:add(nn.LogSoftMax())
params, gradParams = module:getParameters()
module_length = params:size(1)
print(string.format('Module 1 has %i total weight and biases', module_length))
-- 15910

print('Module 2 initiated:')
module = nn.Sequential()
module:add(nn.Convert('bchw', 'bf'))
module:add(nn.Linear(1*28*28, 20))
module:add(nn.Tanh())
module:add(nn.Linear(20, 5))
module:add(nn.Tanh())
module:add(nn.Linear(5, 10))
module:add(nn.LogSoftMax())
params, gradParams = module:getParameters()
module_length = params:size(1)
print(string.format('Module 2 has %i total weight and biases', module_length))
-- 15865

print('Module 3 initiated:')
module = nn.Sequential()
module:add(nn.Convert('bchw', 'bf'))
module:add(nn.Linear(1*28*28, 20))
module:add(nn.Tanh())
module:add(nn.Linear(20, 5))
module:add(nn.Tanh())
module:add(nn.Linear(5, 5))
module:add(nn.Tanh())
module:add(nn.Linear(5, 10))
module:add(nn.LogSoftMax())
params, gradParams = module:getParameters()
module_length = params:size(1)
print(string.format('Module 3 has %i total weight and biases', module_length))
-- 15895

print('Module 4 initiated:')
module = nn.Sequential()
module:add(nn.Convert('bchw', 'bf'))
module:add(nn.Linear(1*28*28, 15))
module:add(nn.Tanh())
module:add(nn.Linear(15, 150))
module:add(nn.Tanh())
module:add(nn.Linear(150, 10))
module:add(nn.LogSoftMax())
params, gradParams = module:getParameters()
module_length = params:size(1)
print(string.format('Module 4 has %i total weight and biases', module_length))
-- 15685

print('Module 5 initiated:')
module = nn.Sequential()
module:add(nn.Convert('bchw', 'bf'))
module:add(nn.Linear(1*28*28, 15))
module:add(nn.Tanh())
module:add(nn.Linear(15, 100))
module:add(nn.Tanh())
module:add(nn.Linear(100, 20))
module:add(nn.Tanh())
module:add(nn.Linear(20, 10))
module:add(nn.LogSoftMax())
params, gradParams = module:getParameters()
module_length = params:size(1)
print(string.format('Module 5 has %i total weight and biases', module_length))
-- 15605

print('Module 6 initiated:')
module = nn.Sequential()
module:add(nn.Convert('bchw', 'bf'))
module:add(nn.Linear(1*28*28, 15))
module:add(nn.Tanh())
module:add(nn.Linear(15, 75))
module:add(nn.Tanh())
module:add(nn.Linear(75, 30))
module:add(nn.Tanh())
module:add(nn.Linear(30, 10))
module:add(nn.Tanh())
module:add(nn.Linear(10, 10))
module:add(nn.LogSoftMax())
params, gradParams = module:getParameters()
module_length = params:size(1)
print(string.format('Module 5 has %i total weight and biases', module_length))
-- 15675
